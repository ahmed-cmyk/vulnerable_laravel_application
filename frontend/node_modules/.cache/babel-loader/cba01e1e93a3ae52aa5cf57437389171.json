{"ast":null,"code":"export default {\n  data() {\n    return {\n      password: \"\"\n    };\n  },\n\n  computed: {\n    changeId() {\n      return this.$route.params.id;\n    },\n\n    validEmail() {\n      return this.$store.getters.getEmailByChangeId(this.changeId);\n    }\n\n  },\n  methods: {\n    async updatePassword() {\n      const check = await this.$store.dispatch(\"changePassword\", {\n        email: this.validEmail,\n        password: this.password\n      });\n\n      if (check) {\n        this.$router.push({\n          name: \"login\"\n        });\n        this.$store.dispatch(\"setMessage\", \"Password changed successfully\");\n      } else {\n        this.$store.dispatch(\"setErrorMessage\", \"Password change request failed\");\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AA8BA,eAAe;EACbA,IAAI,GAAG;IACL,OAAO;MACLC,QAAQ,EAAE;IADL,CAAP;EAGD,CALY;;EAMbC,QAAQ,EAAE;IACRC,QAAQ,GAAG;MACT,OAAO,KAAKC,MAAL,CAAYC,MAAZ,CAAmBC,EAA1B;IACD,CAHO;;IAIRC,UAAU,GAAG;MACX,OAAO,KAAKC,MAAL,CAAYC,OAAZ,CAAoBC,kBAApB,CAAuC,KAAKP,QAA5C,CAAP;IACD;;EANO,CANG;EAcbQ,OAAO,EAAE;IACP,MAAMC,cAAN,GAAuB;MACrB,MAAMC,KAAI,GAAI,MAAM,KAAKL,MAAL,CAAYM,QAAZ,CAAqB,gBAArB,EAAuC;QACzDC,KAAK,EAAE,KAAKR,UAD6C;QAEzDN,QAAQ,EAAE,KAAKA;MAF0C,CAAvC,CAApB;;MAIA,IAAIY,KAAJ,EAAW;QACT,KAAKG,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE;QAAR,CAAlB;QACA,KAAKV,MAAL,CAAYM,QAAZ,CAAqB,YAArB,EAAmC,+BAAnC;MACF,CAHA,MAGO;QACL,KAAKN,MAAL,CAAYM,QAAZ,CACE,iBADF,EAEE,gCAFF;MAIF;IACD;;EAfM;AAdI,CAAf","names":["data","password","computed","changeId","$route","params","id","validEmail","$store","getters","getEmailByChangeId","methods","updatePassword","check","dispatch","email","$router","push","name"],"sourceRoot":"","sources":["/Users/ahmed/Documents/projects/vulnerable_laravel_app/frontend/src/views/password/ChangePasswordView.vue"],"sourcesContent":["<template>\n  <form @submit.prevent=\"updatePassword\" v-if=\"validEmail\">\n    <h2>Reset password</h2>\n    <div class=\"field\">\n      <input\n        v-model=\"validEmail\"\n        class=\"field-input\"\n        type=\"email\"\n        name=\"email\"\n        autocomplete=\"off\"\n        disabled />\n      <label class=\"field-label\" for=\"email\">Email</label>\n    </div>\n    <div class=\"field\">\n      <input\n        v-model=\"password\"\n        class=\"field-input\"\n        type=\"password\"\n        name=\"password\"\n        autocomplete=\"off\" />\n      <label class=\"field-label\" for=\"password\">New Password</label>\n    </div>\n    <div class=\"field\">\n      <input class=\"field-submit\" type=\"submit\" value=\"Submit\" />\n    </div>\n  </form>\n  <div class=\"field\" v-else>Email is missing</div>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      password: \"\",\n    };\n  },\n  computed: {\n    changeId() {\n      return this.$route.params.id;\n    },\n    validEmail() {\n      return this.$store.getters.getEmailByChangeId(this.changeId);\n    },\n  },\n  methods: {\n    async updatePassword() {\n      const check = await this.$store.dispatch(\"changePassword\", {\n        email: this.validEmail,\n        password: this.password,\n      });\n      if (check) {\n        this.$router.push({ name: \"login\" });\n        this.$store.dispatch(\"setMessage\", \"Password changed successfully\");\n      } else {\n        this.$store.dispatch(\n          \"setErrorMessage\",\n          \"Password change request failed\"\n        );\n      }\n    },\n  },\n};\n</script>\n\n<style>\nform {\n  margin: 3rem auto;\n  height: 40vh;\n  width: 100%;\n  max-width: 500px;\n}\n.field {\n  display: flex;\n  flex-direction: column-reverse;\n  padding: 0.5rem 0;\n}\n.field .field-input {\n  padding: 0.5rem;\n}\n.field .field-submit {\n  padding: 0.75rem 0.5rem;\n  border: none;\n  border-radius: 10px;\n  background: #68bbe3;\n  color: white;\n}\n.field .field-submit:active {\n  background: #0e86d4;\n  transform: scale(1.1);\n}\n.field-error {\n  color: red;\n  text-align: center;\n}\n</style>\n"]},"metadata":{},"sourceType":"module"}