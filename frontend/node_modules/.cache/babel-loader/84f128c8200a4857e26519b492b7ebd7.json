{"ast":null,"code":"import { createElementVNode as _createElementVNode, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"textarea\", {\n  rows: \"5\",\n  cols: \"80\"\n}, null, -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = [_hoisted_1];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", null, _hoisted_2);\n}","map":{"version":3,"mappings":";;gCAEIA,oBAAwC,UAAxC,EAAwC;EAA9BC,IAAI,EAAC,GAAyB;EAArBC,IAAI,EAAC;AAAgB,CAAxC;;AAAA;;oBAAAC;;uBADFC,oBAEO,MAFP,EAEO,IAFP,EAEOC,UAFP","names":["_createElementVNode","rows","cols","_hoisted_1","_createElementBlock","_hoisted_2"],"sourceRoot":"","sources":["/Users/ahmed/Documents/projects/vulnerable_laravel_app/frontend/src/views/comments/CreateView.vue"],"sourcesContent":["<template>\n  <form>\n    <textarea rows=\"5\" cols=\"80\"></textarea>\n  </form>\n</template>\n\n<script>\nexport default {\n  data() {\n    return {\n      comment: \"\",\n    };\n  },\n  methods: {\n    async addComment() {\n      const status = await this.$store.dispatch(\"updateBlog\", {\n        body: { id: this.id, title: this.title, body: this.body },\n        token: this.token,\n      });\n\n      if (status === 200) {\n        this.$store.dispatch(\"setMessage\", \"Comment added successfully\");\n      }\n    },\n  },\n};\n</script>\n"]},"metadata":{},"sourceType":"module"}