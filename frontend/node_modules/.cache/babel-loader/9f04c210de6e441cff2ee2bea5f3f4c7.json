{"ast":null,"code":"import { toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, createTextVNode as _createTextVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createTextVNode(_toDisplayString($props.blog) + \" \", 1\n  /* TEXT */\n  ), _createElementVNode(\"button\", {\n    onClick: _cache[0] || (_cache[0] = (...args) => $options.cancel && $options.cancel(...args))\n  }, \"cancel\")], 64\n  /* STABLE_FRAGMENT */\n  );\n}","map":{"version":3,"mappings":";;+FACOA,eAAO,KACV;EAAA;KAAAC,oBAAuC,QAAvC,EAAuC;IAA9BC,OAAK,yCAAEC,2CAAF;EAAyB,CAAvC,EAAwB,QAAxB","names":["$props","_createElementVNode","onClick","$options"],"sourceRoot":"","sources":["/Users/ahmed/Documents/projects/vulnerable_node_app/frontend/src/views/blog/EditBlogView.vue"],"sourcesContent":["<template>\n    {{ blog }}\n    <button @click=\"cancel\">cancel</button>\n</template>\n\n<script>\nexport default {\n    props: {\n        blog: Object\n    },\n    methods: {\n        cancel() {\n            this.$emit('toggle')\n        },\n        editBlog() {\n\n        }\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}