{"ast":null,"code":"export default {\n  data() {\n    return {\n      email: window.localStorage.getItem('email'),\n      token: 0\n    };\n  },\n\n  methods: {\n    async sendForgetReq() {\n      const {\n        status\n      } = await this.$store.dispatch('makeForgetRequest', {\n        email: this.email\n      });\n      this.$store.dispatch('setMessage', 'Sent password recovery email');\n\n      if (status === 200) {\n        this.$router.push({\n          name: 'reset-password'\n        });\n      }\n    },\n\n    checkToken() {\n      const storedToken = this.$store.getters('getTokenByEmail', this.email);\n      const changeId = this.generateChangeId();\n\n      if (storedToken === this.token) {\n        this.$router.push({\n          name: 'change-password',\n          params: {\n            id: changeId\n          }\n        });\n      }\n    },\n\n    generateChangeId() {\n      const changeId = Math.floor(100000000 + Math.random() * 900000000);\n      let check = true;\n\n      while (check) {\n        check = this.$store.dispatch('storeChangeId', {\n          email: this.email,\n          changeId: changeId\n        });\n      }\n    }\n\n  }\n};","map":{"version":3,"mappings":"AAcA,eAAe;EACXA,IAAI,GAAG;IACH,OAAO;MACHC,KAAK,EAAEC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,OAA5B,CADJ;MAEHC,KAAK,EAAE;IAFJ,CAAP;EAIH,CANU;;EAOXC,OAAO,EAAE;IACL,MAAMC,aAAN,GAAsB;MAClB,MAAM;QAAEC;MAAF,IAAa,MAAM,KAAKC,MAAL,CAAYC,QAAZ,CAAqB,mBAArB,EAA0C;QAAET,KAAK,EAAE,KAAKA;MAAd,CAA1C,CAAzB;MACA,KAAKQ,MAAL,CAAYC,QAAZ,CAAqB,YAArB,EAAmC,8BAAnC;;MAEA,IAAGF,MAAK,KAAM,GAAd,EAAmB;QACf,KAAKG,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE;QAAR,CAAlB;MACJ;IACH,CARI;;IASLC,UAAU,GAAG;MACT,MAAMC,WAAU,GAAI,KAAKN,MAAL,CAAYO,OAAZ,CAAoB,iBAApB,EAAuC,KAAKf,KAA5C,CAApB;MACA,MAAMgB,QAAO,GAAI,KAAKC,gBAAL,EAAjB;;MAEA,IAAGH,WAAU,KAAM,KAAKV,KAAxB,EAA+B;QAC3B,KAAKM,OAAL,CAAaC,IAAb,CAAkB;UAAEC,IAAI,EAAE,iBAAR;UAA2BM,MAAM,EAAE;YAAEC,EAAE,EAAEH;UAAN;QAAnC,CAAlB;MACJ;IACH,CAhBI;;IAiBLC,gBAAgB,GAAG;MACf,MAAMD,QAAO,GAAII,IAAI,CAACC,KAAL,CAAW,YAAYD,IAAI,CAACE,MAAL,KAAgB,SAAvC,CAAjB;MACA,IAAIC,KAAI,GAAI,IAAZ;;MAEA,OAAMA,KAAN,EAAa;QACTA,KAAI,GAAI,KAAKf,MAAL,CAAYC,QAAZ,CAAqB,eAArB,EAAsC;UAC1CT,KAAK,EAAE,KAAKA,KAD8B;UAE1CgB,QAAQ,EAAEA;QAFgC,CAAtC,CAAR;MAIJ;IACJ;;EA3BK;AAPE,CAAf","names":["data","email","window","localStorage","getItem","token","methods","sendForgetReq","status","$store","dispatch","$router","push","name","checkToken","storedToken","getters","changeId","generateChangeId","params","id","Math","floor","random","check"],"sourceRoot":"","sources":["/Users/ahmed/Documents/projects/vulnerable_node_app/frontend/src/views/password/TokenPasswordView.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"sendForgetReq\">\n        <h2>Input token</h2>\n        <div class=\"field\">\n            <input v-model=\"token\" class=\"field-input\" type=\"text\" name=\"token\" autocomplete=\"off\" required>\n            <label class=\"field-label\" for=\"token\">token</label>\n        </div>\n        <div class=\"field\">\n            <input class=\"field-submit\" type=\"submit\" value=\"submit\" />\n        </div>\n    </form>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            email: window.localStorage.getItem('email'),\n            token: 0\n        }\n    },\n    methods: {\n        async sendForgetReq() {\n            const { status } = await this.$store.dispatch('makeForgetRequest', { email: this.email })\n            this.$store.dispatch('setMessage', 'Sent password recovery email')\n            \n            if(status === 200) {\n                this.$router.push({ name: 'reset-password' })\n            }\n        },\n        checkToken() {\n            const storedToken = this.$store.getters('getTokenByEmail', this.email)\n            const changeId = this.generateChangeId()\n\n            if(storedToken === this.token) {\n                this.$router.push({ name: 'change-password', params: { id: changeId } })\n            }\n        },\n        generateChangeId() {\n            const changeId = Math.floor(100000000 + Math.random() * 900000000);\n            let check = true\n\n            while(check) {\n                check = this.$store.dispatch('storeChangeId', {\n                    email: this.email,\n                    changeId: changeId\n                })\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    form {\n        margin: 3rem auto;\n        height: 40vh;\n        width: 100%;\n        max-width: 500px;\n    }\n    .field {\n        display: flex;\n        flex-direction: column-reverse;\n        padding: 0.5rem 0;\n    }\n    .field .field-input {\n        padding: 0.5rem;\n    }\n    .field .field-submit {\n        padding: 0.75rem 0.5rem;\n        border: none;\n        border-radius: 10px;\n        background: #68bbe3;\n        color: white;\n    }\n    .field .field-submit:active {\n        background: #0e86d4;\n        transform: scale(1.1);\n    }\n    .field-error {\n        color: red;\n        text-align: center;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}