{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, withModifiers as _withModifiers, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\n\nconst _hoisted_1 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"Reset password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_2 = {\n  class: \"field\"\n};\n\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"field-label\",\n  for: \"email\"\n}, \"Email\", -1\n/* HOISTED */\n);\n\nconst _hoisted_4 = {\n  class: \"field\"\n};\n\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"label\", {\n  class: \"field-label\",\n  for: \"password\"\n}, \"New Password\", -1\n/* HOISTED */\n);\n\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"div\", {\n  class: \"field\"\n}, [/*#__PURE__*/_createElementVNode(\"input\", {\n  class: \"field-submit\",\n  type: \"submit\",\n  value: \"Submit\"\n})], -1\n/* HOISTED */\n);\n\nconst _hoisted_7 = {\n  key: 1,\n  class: \"field\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return 1 ? (_openBlock(), _createElementBlock(\"form\", {\n    key: 0,\n    onSubmit: _cache[2] || (_cache[2] = _withModifiers((...args) => $options.updatePassword && $options.updatePassword(...args), [\"prevent\"]))\n  }, [_hoisted_1, _createElementVNode(\"div\", _hoisted_2, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $options.validEmail = $event),\n    class: \"field-input\",\n    type: \"email\",\n    name: \"email\",\n    autocomplete: \"off\",\n    disabled: \"\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $options.validEmail]]), _hoisted_3]), _createElementVNode(\"div\", _hoisted_4, [_withDirectives(_createElementVNode(\"input\", {\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    class: \"field-input\",\n    type: \"password\",\n    name: \"password\",\n    autocomplete: \"off\"\n  }, null, 512\n  /* NEED_PATCH */\n  ), [[_vModelText, $data.password]]), _hoisted_5]), _hoisted_6], 32\n  /* HYDRATE_EVENTS */\n  )) : (_openBlock(), _createElementBlock(\"div\", _hoisted_7, \" Email is missing \"));\n}","map":{"version":3,"mappings":";;gCAEQA,oBAAuB,IAAvB,EAAuB,IAAvB,EAAI,gBAAJ,EAAkB;AAAA;AAAlB;;;EACKC,KAAK,EAAC;;;gCAEPD,oBAAoD,OAApD,EAAoD;EAA7CC,KAAK,EAAC,aAAuC;EAAzBC,GAAG,EAAC;AAAqB,CAApD,EAAuC,OAAvC,EAA4C;AAAA;AAA5C;;;EAECD,KAAK,EAAC;;;gCAEPD,oBAA8D,OAA9D,EAA8D;EAAvDC,KAAK,EAAC,aAAiD;EAAnCC,GAAG,EAAC;AAA+B,CAA9D,EAA0C,cAA1C,EAAsD;AAAA;AAAtD;;gCAEJF,oBAEM,KAFN,EAEM;EAFDC,KAAK,EAAC;AAEL,CAFN,EAAkB,cACdD,oBAA2D,OAA3D,EAA2D;EAApDC,KAAK,EAAC,cAA8C;EAA/BE,IAAI,EAAC,QAA0B;EAAjBC,KAAK,EAAC;AAAW,CAA3D,CADc,CAAlB;;AAAA;;;;EAICH,KAAK,EAAC;;;SAdkC,mBAA7CI,oBAaO,MAbP,EAaO;UAAA;IAbAC,QAAM,wDAAUC,2DAAV,EAAwB,WAAxB;EAaN,CAbP,GACIC,YACAR,oBAGM,KAHN,cAGM,iBAFFA,oBAAsG,OAAtG,EAAsG;+DAAtFO,sBAAUE,OAA4E;IAA1ER,KAAK,EAAC,aAAoE;IAAtDE,IAAI,EAAC,OAAiD;IAAzCO,IAAI,EAAC,OAAoC;IAA5BC,YAAY,EAAC,KAAe;IAATC,QAAQ,EAAR;EAAS,CAAtG;;EAAA,kBAAgBL,sBAEd,EADFM,UACE,CAHN,GAIAb,oBAGM,KAHN,cAGM,iBAFFA,oBAAiG,OAAjG,EAAiG;+DAAjFc,iBAAQL,OAAyE;IAAvER,KAAK,EAAC,aAAiE;IAAnDE,IAAI,EAAC,UAA8C;IAAnCO,IAAI,EAAC,UAA8B;IAAnBC,YAAY,EAAC;EAAM,CAAjG;;EAAA,kBAAgBG,iBAEd,EADFC,UACE,CAHN,GAIAC,WAVJ;;EAAA,oBAcAX,oBAEM,KAFN,cAA0B,oBAA1B","names":["_createElementVNode","class","for","type","value","_createElementBlock","onSubmit","$options","_hoisted_1","$event","name","autocomplete","disabled","_hoisted_3","$data","_hoisted_5","_hoisted_6"],"sourceRoot":"","sources":["/Users/ahmed/Documents/projects/vulnerable_node_app/frontend/src/views/password/ChangePasswordView.vue"],"sourcesContent":["<template>\n    <form @submit.prevent=\"updatePassword\" v-if=\"1\">\n        <h2>Reset password</h2>\n        <div class=\"field\">\n            <input v-model=\"validEmail\" class=\"field-input\" type=\"email\" name=\"email\" autocomplete=\"off\" disabled>\n            <label class=\"field-label\" for=\"email\">Email</label>\n        </div>\n        <div class=\"field\">\n            <input v-model=\"password\" class=\"field-input\" type=\"password\" name=\"password\" autocomplete=\"off\">\n            <label class=\"field-label\" for=\"password\">New Password</label>\n        </div>\n        <div class=\"field\">\n            <input class=\"field-submit\" type=\"submit\" value=\"Submit\" />\n        </div>\n    </form>\n    <div class=\"field\" v-else>\n        Email is missing\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            password: ''\n        }\n    },\n    computed: {\n        changeId() {\n            return this.$route.params.id\n        },\n        validEmail() {\n            return this.$store.getters.getEmailByChangeId(this.changeId)\n        }\n    },\n    methods: {\n        async updatePassword() {\n            const check = await this.$store.dispatch('changePassword', { email: this.validEmail, password: this.password })\n            if(check) {\n                this.$router.push({ name: 'login' })\n                this.$store.dispatch('setMessage', 'Password changed successfully')\n            } else {\n                this.$store.dispatch('setErrorMessage', 'Password change request failed')\n            }\n        }\n    }\n}\n</script>\n\n<style>\n    form {\n        margin: 3rem auto;\n        height: 40vh;\n        width: 100%;\n        max-width: 500px;\n    }\n    .field {\n        display: flex;\n        flex-direction: column-reverse;\n        padding: 0.5rem 0;\n    }\n    .field .field-input {\n        padding: 0.5rem;\n    }\n    .field .field-submit {\n        padding: 0.75rem 0.5rem;\n        border: none;\n        border-radius: 10px;\n        background: #68bbe3;\n        color: white;\n    }\n    .field .field-submit:active {\n        background: #0e86d4;\n        transform: scale(1.1);\n    }\n    .field-error {\n        color: red;\n        text-align: center;\n    }\n</style>"]},"metadata":{},"sourceType":"module"}