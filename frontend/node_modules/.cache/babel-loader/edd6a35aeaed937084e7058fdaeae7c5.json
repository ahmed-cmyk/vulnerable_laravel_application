{"ast":null,"code":"import user from \"@/logic/user\";\nimport jwt_decode from \"jwt-decode\";\nexport default {\n  namespace: true,\n\n  state() {\n    return {\n      user: null,\n      token: null\n    };\n  },\n\n  mutations: {\n    addToken(state, data) {\n      state.token = data;\n    },\n\n    removeToken(state) {\n      state.token = null;\n    },\n\n    setUser(state, data) {\n      state.user = data;\n    },\n\n    removeUser(state) {\n      state.user = null;\n    }\n\n  },\n  actions: {\n    async login(context, creds) {\n      const res = await user.login(creds);\n      if (!res) return false;\n\n      if (res.status === 200 && res.data.token) {\n        context.commit('addToken', res.data.token);\n        context.commit('setUser', {\n          'username': res.data.username,\n          'name': res.data.name,\n          'email': res.data.email\n        });\n        window.localStorage.setItem('authToken', `bearer ${context.state.token}`);\n        return true;\n      }\n\n      return false;\n    },\n\n    checkLocalStorage(context) {\n      var token = window.localStorage.getItem('authToken');\n\n      if (token) {\n        context.commit('addToken', token);\n        return true;\n      }\n\n      return false;\n    },\n\n    autoLogin({\n      state,\n      commit\n    }) {\n      const data = jwt_decode(state.token);\n      commit('setUser', data);\n    },\n\n    deleteToken({\n      commit\n    }) {\n      commit('removeToken');\n      commit('removeUser');\n    }\n\n  }\n};","map":{"version":3,"names":["user","jwt_decode","namespace","state","token","mutations","addToken","data","removeToken","setUser","removeUser","actions","login","context","creds","res","status","commit","username","name","email","window","localStorage","setItem","checkLocalStorage","getItem","autoLogin","deleteToken"],"sources":["/Users/ahmed/Documents/projects/vulnerable_laravel_app/frontend/src/modules/user.js"],"sourcesContent":["import user from \"@/logic/user\"\nimport jwt_decode from \"jwt-decode\";\n\nexport default {\n    namespace: true,\n    state() {\n        return {\n            user: null,\n            token: null\n        }\n    },\n    mutations: {\n        addToken(state, data) { \n            state.token = data \n        },\n        removeToken(state) {\n            state.token = null\n        },\n        setUser(state, data) { \n            state.user = data\n        },\n        removeUser(state) {\n            state.user = null\n        }\n    },\n    actions: {\n        async login(context, creds) {\n            const res = await user.login(creds)\n            if(!res) return false\n\n            if((res.status === 200) && (res.data.token)) {\n                context.commit('addToken', res.data.token)\n                context.commit('setUser', {\n                    'username': res.data.username,\n                    'name': res.data.name,\n                    'email': res.data.email\n                })\n\n                window.localStorage.setItem('authToken', `bearer ${context.state.token}`)\n                return true\n            }\n\n            return false\n        },\n        checkLocalStorage(context) {\n            var token = window.localStorage.getItem('authToken')\n            \n            if(token) {\n                context.commit('addToken', token)\n                return true\n            }\n\n            return false\n        },\n        autoLogin({ state, commit }) {\n            const data = jwt_decode(state.token)\n            commit('setUser', data)\n        },\n        deleteToken({ commit }) {\n            commit('removeToken')\n            commit('removeUser')\n        }\n    }\n}"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,cAAjB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AAEA,eAAe;EACXC,SAAS,EAAE,IADA;;EAEXC,KAAK,GAAG;IACJ,OAAO;MACHH,IAAI,EAAE,IADH;MAEHI,KAAK,EAAE;IAFJ,CAAP;EAIH,CAPU;;EAQXC,SAAS,EAAE;IACPC,QAAQ,CAACH,KAAD,EAAQI,IAAR,EAAc;MAClBJ,KAAK,CAACC,KAAN,GAAcG,IAAd;IACH,CAHM;;IAIPC,WAAW,CAACL,KAAD,EAAQ;MACfA,KAAK,CAACC,KAAN,GAAc,IAAd;IACH,CANM;;IAOPK,OAAO,CAACN,KAAD,EAAQI,IAAR,EAAc;MACjBJ,KAAK,CAACH,IAAN,GAAaO,IAAb;IACH,CATM;;IAUPG,UAAU,CAACP,KAAD,EAAQ;MACdA,KAAK,CAACH,IAAN,GAAa,IAAb;IACH;;EAZM,CARA;EAsBXW,OAAO,EAAE;IACL,MAAMC,KAAN,CAAYC,OAAZ,EAAqBC,KAArB,EAA4B;MACxB,MAAMC,GAAG,GAAG,MAAMf,IAAI,CAACY,KAAL,CAAWE,KAAX,CAAlB;MACA,IAAG,CAACC,GAAJ,EAAS,OAAO,KAAP;;MAET,IAAIA,GAAG,CAACC,MAAJ,KAAe,GAAhB,IAAyBD,GAAG,CAACR,IAAJ,CAASH,KAArC,EAA6C;QACzCS,OAAO,CAACI,MAAR,CAAe,UAAf,EAA2BF,GAAG,CAACR,IAAJ,CAASH,KAApC;QACAS,OAAO,CAACI,MAAR,CAAe,SAAf,EAA0B;UACtB,YAAYF,GAAG,CAACR,IAAJ,CAASW,QADC;UAEtB,QAAQH,GAAG,CAACR,IAAJ,CAASY,IAFK;UAGtB,SAASJ,GAAG,CAACR,IAAJ,CAASa;QAHI,CAA1B;QAMAC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,WAA5B,EAA0C,UAASV,OAAO,CAACV,KAAR,CAAcC,KAAM,EAAvE;QACA,OAAO,IAAP;MACH;;MAED,OAAO,KAAP;IACH,CAlBI;;IAmBLoB,iBAAiB,CAACX,OAAD,EAAU;MACvB,IAAIT,KAAK,GAAGiB,MAAM,CAACC,YAAP,CAAoBG,OAApB,CAA4B,WAA5B,CAAZ;;MAEA,IAAGrB,KAAH,EAAU;QACNS,OAAO,CAACI,MAAR,CAAe,UAAf,EAA2Bb,KAA3B;QACA,OAAO,IAAP;MACH;;MAED,OAAO,KAAP;IACH,CA5BI;;IA6BLsB,SAAS,CAAC;MAAEvB,KAAF;MAASc;IAAT,CAAD,EAAoB;MACzB,MAAMV,IAAI,GAAGN,UAAU,CAACE,KAAK,CAACC,KAAP,CAAvB;MACAa,MAAM,CAAC,SAAD,EAAYV,IAAZ,CAAN;IACH,CAhCI;;IAiCLoB,WAAW,CAAC;MAAEV;IAAF,CAAD,EAAa;MACpBA,MAAM,CAAC,aAAD,CAAN;MACAA,MAAM,CAAC,YAAD,CAAN;IACH;;EApCI;AAtBE,CAAf"},"metadata":{},"sourceType":"module"}