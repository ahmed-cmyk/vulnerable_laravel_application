{"ast":null,"code":"import { toDisplayString as _toDisplayString, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  key: 0\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return $options.blog ? (_openBlock(), _createElementBlock(\"div\", _hoisted_1, _toDisplayString($options.blog), 1\n  /* TEXT */\n  )) : _createCommentVNode(\"v-if\", true);\n}","map":{"version":3,"mappings":";;;;;SACeA,+BAAXC,oBAEM,KAFN,EAEMC,UAFN,EAEMC,iBADCH,aACD,CAFN,EACW;EAAA;EADX","names":["$options","_createElementBlock","_hoisted_1","_toDisplayString"],"sourceRoot":"","sources":["/Users/ahmed/Documents/projects/vulnerable_node_app/frontend/src/views/blog/BlogDetailView.vue"],"sourcesContent":["<template>\n    <div v-if=\"blog\">\n        {{ blog }}\n    </div>\n</template>\n\n<script>\nexport default {\n    data() {\n        return {\n            id: this.$route.params.id\n        }\n    },\n    computed: {\n        blog() {\n            console.log(this.id)\n            return this.$store.getters.getBlogById(this.id)\n        },\n        token() {\n            return this.$store.state.user.token\n        },\n    },\n    created() {\n        this.$store.dispatch('checkLocalStorage')\n        this.$store.dispatch('getBlogs', this.token)\n    }\n}\n</script>"]},"metadata":{},"sourceType":"module"}